/* Copyright (c) 2017 Andrea Buran [www.andreaburan.com]. All rights reserved */

/*
** Previews
*/

.previews {
  padding-top: em($m-base-rhythm);
  padding-bottom: em($m-base-rhythm/2);
  li {
    animation-duration: $duration*4;
    animation-name: element-in-up;
    animation-fill-mode: both;
    width: 100/2*1%;
    margin-bottom: em($m-base-rhythm*1.5);
    padding-right: em($m-gut/2);
    padding-left: em($m-gut/2);
  }
  @include min-screen(col(8)) {
    padding-top: em($d-base-rhythm/2);
    padding-bottom: em($d-base-rhythm/2);
    li {
      width: 100/2*1%;
      margin-bottom: em($d-base-rhythm*1.5);
      padding-right: em($d-gut/2);
      padding-left: em($d-gut/2);
    }
  }
  @include min-screen(col(12)) {
    li {
      width: 100/3*1%;
    }
  }
  @include min-screen(col(16)) {
    li {
      width: 100/4*1%;
    }
  }
}

@for $i from 0 through 24 {
  .previews li:nth-child(#{$i + 1}n) {
    animation-delay: #{$i * $duration/8 };
  }
}

.preview {
  position: relative;
  display: block;
  text-decoration: none;

  &:before {
    position: absolute;
    top: 0;
    right: 0;
    left: 0;
    width: 100%;
    margin-right: auto;
    margin-left: auto;
    padding-bottom: 100/4*3%;
    content: "";
    transition-timing-function: ease-out, ease-out, ease-out, ease-out;
    transition-duration: $duration, $duration, $duration, $duration;
    transition-property: height, opacity, transform, width;
    transform-origin: 50% 0 ;
    opacity: 0.0;
    background-color: $picture-background-color;
  }
  .preview-image {
    position: relative;
    padding-bottom: 100/4*3%;
    transition-timing-function: ease-out;
    transition-duration: $duration;
    transition-property: transform;
    transform: translate(0, 0);
    background-color: $picture-background-color;

    @include font-size($m-tiny-size, $m-tiny-line);
    img {
      position: absolute;
      z-index: 1;
    }
  }
  .preview-title {
    font-weight: $medium;
    margin-top: em($m-small-line/2, $m-small-size);
    transition-timing-function: ease-in-out;
    transition-duration: 0.2s;
    transition-property: color;
    color: $strong-type-color;

    @include font-size($m-small-size, $m-small-line);
  }
  .preview-tags {
    @include face(serif);
    font-style: italic;
    margin-top: em($m-tiny-line/4, $m-tiny-size);
    color: $type-color;

    @include font-size($m-tiny-size, $m-tiny-line);
  }
  .preview-time {
    margin-top: em($m-small-line/4, $m-small-size);
    color: $type-color;

    @include face(mono);
    @include font-size($m-small-size, $m-small-line);
  }
  &:hover {
    &:before {
      opacity: 1.0;

      @include adjust-dimension(width, $m-gut/2*3);
    }
    .preview-image {
      transform: translate(0, em(-$m-gut/2*3, $m-tiny-size));
    }
    .preview-title {
      color: $color;
    }
  }
  &:active {
    .preview-image {
      transition-duration: 0.0s;
      transform: translate(0, 0);
    }
    .preview-title {
      transition-duration: 0.0s;
      color: $color;
    }
  }
  @include min-screen(col(8)) {
    .preview-image {
      @include font-size($d-tiny-size, $d-tiny-line);
    }
    .preview-title {
      margin-top: em($d-small-line/2, $d-small-size);

      @include font-size($d-small-size, $d-small-line);
    }
    .preview-tags {
      margin-top: em($d-small-line/4, $d-small-size);

      @include font-size($d-small-size, $d-small-line);
    }
    .preview-time {
      margin-top: em($d-small-line/4, $d-small-size);

      @include font-size($d-small-size, $d-small-line);
    }
    &:hover {
      &:before {
        @include adjust-dimension(width, $d-gut);
      }
      .preview-image {
        transform: translate(0, em(-$d-gut, $d-tiny-size));
      }
    }
    &:active {
      .preview-image {
        transition-duration: 0.0s;
        transform: translate(0, 0);
      }
    }
  }
}

.preview.current {
  cursor: default;

  &:before {
    opacity: 1.0;

    @include adjust-dimension(width, $m-gut/2*3);
  }
  .preview-image {
    transform: translate(0, em(-$m-gut/2*3, $m-tiny-size));
  }
  .preview-title {
    color: $color;
  }
  @include min-screen(col(8)) {
    &:before {
      @include adjust-dimension(width, $d-gut);
    }
    .preview-image {
      transform: translate(0, em(-$d-gut, $d-tiny-size));
    }
  }
}
